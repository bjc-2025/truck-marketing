# Project Intelligence: Truck Marketing Website

## Critical Implementation Paths
1. **Navigation Structure**: Services organized in NavSection objects with priority indicators
2. **Component Architecture**: Layout components wrap page-specific sections
3. **Data Management**: Local data files in `src/data/` for services, case studies, etc.
4. **Form Handling**: API routes in `src/app/api/` for form submissions

## User Preferences
- Prefers Shadcn UI components for consistency
- Values mobile-first responsive design
- Prioritizes performance optimizations like selective prefetching
- Prefers TypeScript with strict typing

## Project-Specific Patterns
1. **Priority-Based Prefetching**: Links use priority flags to control prefetch behavior
```tsx
const shouldPrefetch = (priority?: 'high' | 'medium' | 'low') => {
  switch (priority) {
    case 'high': return true
    case 'medium': return true
    case 'low': return false
    default: return true
  }
}
```

2. **Navigation Organization**: Services structured with icons and descriptions
```tsx
const services: NavSection = {
  title: "Services",
  items: [
    {
      title: "Website Development",
      href: "/services/website-development",
      description: "Custom websites...",
      icon: Globe,
      priority: 'high'
    },
    // ...
  ]
}
```

3. **Mobile Navigation Pattern**: Uses Sheet component for mobile menu with full service details

## Key File Locations
- `src/components/layout/`: Header, footer, and other layout components
- `src/components/sections/`: Page section components (hero, services grid, etc.)
- `src/app/(marketing)/`: Marketing pages organized by route groups
- `src/data/`: Structured data files for services, case studies, etc.

## Known Challenges
1. Mobile menu animation performance
2. Prefetch heuristic optimization
3. Service icon consistency
4. Internationalization support

## Evolution of Decisions
1. Moved from simple navigation to priority-based prefetching
2. Added detailed service information in mobile menu
3. Implemented separate navigation structures for desktop/mobile

## Tool Usage Patterns
- Prefer Shadcn UI components for consistency
- Use Lucide React for icons
- Implement responsive patterns with Tailwind CSS breakpoints
